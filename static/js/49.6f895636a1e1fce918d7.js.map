{"version":3,"sources":["webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/liquid/liquid.js"],"names":["Object","defineProperty","__webpack_exports__","value","__webpack_require__","d","conf","language","__WEBPACK_IMPORTED_MODULE_0__fillers_monaco_editor_core_js__","EMPTY_ELEMENTS","wordPattern","brackets","autoClosingPairs","open","close","surroundingPairs","onEnterRules","beforeText","RegExp","join","afterText","action","indentAction","IndentAction","IndentOutdent","Indent","defaultToken","tokenPostfix","builtinTags","builtinFilters","constants","operators","symbol","identifier","tokenizer","root","token","switchTo","next","comment","otherTag","liquidState","include","liquidRaw","liquidRoot","cases","@operators","@default","@constants","@builtinFilters","@builtinTags"],"mappings":"qDAAAA,OAAAC,eAAAC,EAAA,cAAAC,OAAA,IAAAC,EAAAC,EAAAH,EAAA,yBAAAI,IAAAF,EAAAC,EAAAH,EAAA,6BAAAK,IAAA,IAAAC,EAAAJ,EAAA,QAKAK,GACA,OACA,OACA,KACA,MACA,QACA,KACA,MACA,QACA,SACA,OACA,WACA,OACA,QACA,SACA,QACA,OAEOH,GACPI,YAAA,iFACAC,WACA,qBACA,UACA,KAAY,OACZ,KAAW,OACX,IAAW,MACX,UAEAC,mBACSC,KAAA,IAASC,MAAA,MACTD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MAETC,mBACSF,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MACAD,KAAA,IAAAC,MAAA,MAETE,eAEAC,WAAA,IAAAC,OAAA,UAAAT,EAAAU,KAAA,iDACAC,UAAA,wBACAC,QACAC,aAA8Bd,EAAA,EAASe,aAAAC,iBAIvCP,WAAA,IAAAC,OAAA,UAAAT,EAAAU,KAAA,iDACAE,QAAqBC,aAAed,EAAA,EAASe,aAAAE,WAItClB,GACPmB,aAAA,GACAC,aAAA,GACAC,aACA,KACA,OACA,SACA,QACA,SACA,SACA,UACA,aACA,OACA,UACA,UACA,aACA,QACA,YACA,MACA,SACA,UACA,YACA,SACA,MACA,SACA,SACA,WACA,cACA,SACA,aAEAC,gBACA,MACA,SACA,WACA,UACA,aACA,OACA,UACA,OACA,UACA,aACA,WACA,SACA,cACA,QACA,QACA,OACA,OACA,OACA,SACA,MACA,QACA,SACA,gBACA,OACA,UACA,SACA,eACA,UACA,gBACA,UACA,QACA,SACA,OACA,QACA,OACA,eACA,QACA,QACA,aACA,iBACA,QACA,WACA,gBACA,OACA,SACA,aACA,aACA,SAEAC,WAAA,gBACAC,WAAA,6BACAC,OAAA,UACAC,WAAA,iBACAC,WACAC,OACA,wBAAmC,oCACnC,QAAsBC,MAAA,WAAAC,SAAA,uBACtB,QAAsBD,MAAA,WAAAC,SAAA,uBACtB,qEACA,iCAAgDD,MAAA,WAAAE,KAAA,gBAChD,oCAAmDF,MAAA,WAAAE,KAAA,gBACnD,uBACA,KAAgB,mBAChB,WAEAC,UACA,2BAAsC,8BACtC,+BAEAC,WAEA,QAEAJ,MAAA,WACAC,SAAA,2BAIA,QAEAD,MAAA,WACAC,SAAA,2BAGA,iCACA,gCACA,gCACA,6BACA,kBACA,eAEAI,cACA,OAAkB,4BAClB,QAAsBL,MAAA,0BAAAC,SAAA,cACtB,OAAgB,yBAChB,aAAwB,sCACxB,QAAsBD,MAAA,uBAAAC,SAAA,cACTK,QAAA,eAEbC,YACA,gCACA,OAAgB,yBAChB,gBACA,QAAsBP,MAAA,uBAAAE,KAAA,WAEtBM,aACA,gCACA,4BACA,4BACA,QAEA,WAEAC,OACAC,aAAA,kBACAC,WAAA,OAIA,OAEA,eAEAF,OACAG,aAAA,iBACAC,kBAAA,oBACAC,eAAA,oBACAH,WAAA,sBAIA,SAAiB","file":"static/js/49.6f895636a1e1fce918d7.js","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { languages } from '../fillers/monaco-editor-core.js';\r\nvar EMPTY_ELEMENTS = [\r\n    'area',\r\n    'base',\r\n    'br',\r\n    'col',\r\n    'embed',\r\n    'hr',\r\n    'img',\r\n    'input',\r\n    'keygen',\r\n    'link',\r\n    'menuitem',\r\n    'meta',\r\n    'param',\r\n    'source',\r\n    'track',\r\n    'wbr'\r\n];\r\nexport var conf = {\r\n    wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\$\\^\\&\\*\\(\\)\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\s]+)/g,\r\n    brackets: [\r\n        ['<!--', '-->'],\r\n        ['<', '>'],\r\n        ['{{', '}}'],\r\n        ['{%', '%}'],\r\n        ['{', '}'],\r\n        ['(', ')']\r\n    ],\r\n    autoClosingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '%', close: '%' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n        { open: \"'\", close: \"'\" }\r\n    ],\r\n    surroundingPairs: [\r\n        { open: '<', close: '>' },\r\n        { open: '\"', close: '\"' },\r\n        { open: \"'\", close: \"'\" }\r\n    ],\r\n    onEnterRules: [\r\n        {\r\n            beforeText: new RegExp(\"<(?!(?:\" + EMPTY_ELEMENTS.join('|') + \"))(\\\\w[\\\\w\\\\d]*)([^/>]*(?!/)>)[^<]*$\", 'i'),\r\n            afterText: /^<\\/(\\w[\\w\\d]*)\\s*>$/i,\r\n            action: {\r\n                indentAction: languages.IndentAction.IndentOutdent\r\n            }\r\n        },\r\n        {\r\n            beforeText: new RegExp(\"<(?!(?:\" + EMPTY_ELEMENTS.join('|') + \"))(\\\\w[\\\\w\\\\d]*)([^/>]*(?!/)>)[^<]*$\", 'i'),\r\n            action: { indentAction: languages.IndentAction.Indent }\r\n        }\r\n    ]\r\n};\r\nexport var language = {\r\n    defaultToken: '',\r\n    tokenPostfix: '',\r\n    builtinTags: [\r\n        'if',\r\n        'else',\r\n        'elseif',\r\n        'endif',\r\n        'render',\r\n        'assign',\r\n        'capture',\r\n        'endcapture',\r\n        'case',\r\n        'endcase',\r\n        'comment',\r\n        'endcomment',\r\n        'cycle',\r\n        'decrement',\r\n        'for',\r\n        'endfor',\r\n        'include',\r\n        'increment',\r\n        'layout',\r\n        'raw',\r\n        'endraw',\r\n        'render',\r\n        'tablerow',\r\n        'endtablerow',\r\n        'unless',\r\n        'endunless'\r\n    ],\r\n    builtinFilters: [\r\n        'abs',\r\n        'append',\r\n        'at_least',\r\n        'at_most',\r\n        'capitalize',\r\n        'ceil',\r\n        'compact',\r\n        'date',\r\n        'default',\r\n        'divided_by',\r\n        'downcase',\r\n        'escape',\r\n        'escape_once',\r\n        'first',\r\n        'floor',\r\n        'join',\r\n        'json',\r\n        'last',\r\n        'lstrip',\r\n        'map',\r\n        'minus',\r\n        'modulo',\r\n        'newline_to_br',\r\n        'plus',\r\n        'prepend',\r\n        'remove',\r\n        'remove_first',\r\n        'replace',\r\n        'replace_first',\r\n        'reverse',\r\n        'round',\r\n        'rstrip',\r\n        'size',\r\n        'slice',\r\n        'sort',\r\n        'sort_natural',\r\n        'split',\r\n        'strip',\r\n        'strip_html',\r\n        'strip_newlines',\r\n        'times',\r\n        'truncate',\r\n        'truncatewords',\r\n        'uniq',\r\n        'upcase',\r\n        'url_decode',\r\n        'url_encode',\r\n        'where'\r\n    ],\r\n    constants: ['true', 'false'],\r\n    operators: ['==', '!=', '>', '<', '>=', '<='],\r\n    symbol: /[=><!]+/,\r\n    identifier: /[a-zA-Z_][\\w]*/,\r\n    tokenizer: {\r\n        root: [\r\n            [/\\{\\%\\s*comment\\s*\\%\\}/, 'comment.start.liquid', '@comment'],\r\n            [/\\{\\{/, { token: '@rematch', switchTo: '@liquidState.root' }],\r\n            [/\\{\\%/, { token: '@rematch', switchTo: '@liquidState.root' }],\r\n            [/(<)([\\w\\-]+)(\\/>)/, ['delimiter.html', 'tag.html', 'delimiter.html']],\r\n            [/(<)([:\\w]+)/, ['delimiter.html', { token: 'tag.html', next: '@otherTag' }]],\r\n            [/(<\\/)([\\w\\-]+)/, ['delimiter.html', { token: 'tag.html', next: '@otherTag' }]],\r\n            [/</, 'delimiter.html'],\r\n            [/\\{/, 'delimiter.html'],\r\n            [/[^<{]+/] // text\r\n        ],\r\n        comment: [\r\n            [/\\{\\%\\s*endcomment\\s*\\%\\}/, 'comment.end.liquid', '@pop'],\r\n            [/./, 'comment.content.liquid']\r\n        ],\r\n        otherTag: [\r\n            [\r\n                /\\{\\{/,\r\n                {\r\n                    token: '@rematch',\r\n                    switchTo: '@liquidState.otherTag'\r\n                }\r\n            ],\r\n            [\r\n                /\\{\\%/,\r\n                {\r\n                    token: '@rematch',\r\n                    switchTo: '@liquidState.otherTag'\r\n                }\r\n            ],\r\n            [/\\/?>/, 'delimiter.html', '@pop'],\r\n            [/\"([^\"]*)\"/, 'attribute.value'],\r\n            [/'([^']*)'/, 'attribute.value'],\r\n            [/[\\w\\-]+/, 'attribute.name'],\r\n            [/=/, 'delimiter'],\r\n            [/[ \\t\\r\\n]+/] // whitespace\r\n        ],\r\n        liquidState: [\r\n            [/\\{\\{/, 'delimiter.output.liquid'],\r\n            [/\\}\\}/, { token: 'delimiter.output.liquid', switchTo: '@$S2.$S3' }],\r\n            [/\\{\\%/, 'delimiter.tag.liquid'],\r\n            [/raw\\s*\\%\\}/, 'delimiter.tag.liquid', '@liquidRaw'],\r\n            [/\\%\\}/, { token: 'delimiter.tag.liquid', switchTo: '@$S2.$S3' }],\r\n            { include: 'liquidRoot' }\r\n        ],\r\n        liquidRaw: [\r\n            [/^(?!\\{\\%\\s*endraw\\s*\\%\\}).+/],\r\n            [/\\{\\%/, 'delimiter.tag.liquid'],\r\n            [/@identifier/],\r\n            [/\\%\\}/, { token: 'delimiter.tag.liquid', next: '@root' }],\r\n        ],\r\n        liquidRoot: [\r\n            [/\\d+(\\.\\d+)?/, 'number.liquid'],\r\n            [/\"[^\"]*\"/, 'string.liquid'],\r\n            [/'[^']*'/, 'string.liquid'],\r\n            [/\\s+/],\r\n            [\r\n                /@symbol/,\r\n                {\r\n                    cases: {\r\n                        '@operators': 'operator.liquid',\r\n                        '@default': ''\r\n                    }\r\n                }\r\n            ],\r\n            [/\\./],\r\n            [\r\n                /@identifier/,\r\n                {\r\n                    cases: {\r\n                        '@constants': 'keyword.liquid',\r\n                        '@builtinFilters': 'predefined.liquid',\r\n                        '@builtinTags': 'predefined.liquid',\r\n                        '@default': 'variable.liquid'\r\n                    }\r\n                }\r\n            ],\r\n            [/[^}|%]/, 'variable.liquid']\r\n        ]\r\n    }\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/basic-languages/liquid/liquid.js\n// module id = jZrH\n// module chunks = 49"],"sourceRoot":""}