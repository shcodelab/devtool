{"version":3,"sources":["webpack:///./node_modules/monaco-editor/esm/vs/basic-languages/scss/scss.js"],"names":["Object","defineProperty","__webpack_exports__","value","__webpack_require__","d","conf","language","wordPattern","comments","blockComment","lineComment","brackets","autoClosingPairs","open","close","notIn","surroundingPairs","folding","markers","start","RegExp","end","defaultToken","tokenPostfix","ws","identifier","token","tokenizer","root","include","selector","next","selectorbody","selectorname","selectorattribute","term","rulevalue","switchTo","nestedproperty","warndebug","import","variabledeclaration","urldeclaration","parenthizedterm","declarationbody","extendbody","variablereference","variableinterpolation","comment","name","numbers","units","functiondeclaration","mixindeclaration","parameterdeclaration","includedeclaration","keyframedeclaration","keyframebody","controlstatement","controlstatementdeclaration","functionbody","functioninvocation","functionarguments","strings","stringenddoublequote","stringendquote"],"mappings":"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","file":"static/js/20.33d109cf73dcc8c3a001.js","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport var conf = {\r\n    wordPattern: /(#?-?\\d*\\.\\d\\w*%?)|([@$#!.:]?[\\w-?]+%?)|[@#!.]/g,\r\n    comments: {\r\n        blockComment: ['/*', '*/'],\r\n        lineComment: '//'\r\n    },\r\n    brackets: [\r\n        ['{', '}'],\r\n        ['[', ']'],\r\n        ['(', ')']\r\n    ],\r\n    autoClosingPairs: [\r\n        { open: '{', close: '}', notIn: ['string', 'comment'] },\r\n        { open: '[', close: ']', notIn: ['string', 'comment'] },\r\n        { open: '(', close: ')', notIn: ['string', 'comment'] },\r\n        { open: '\"', close: '\"', notIn: ['string', 'comment'] },\r\n        { open: \"'\", close: \"'\", notIn: ['string', 'comment'] }\r\n    ],\r\n    surroundingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n        { open: \"'\", close: \"'\" }\r\n    ],\r\n    folding: {\r\n        markers: {\r\n            start: new RegExp('^\\\\s*\\\\/\\\\*\\\\s*#region\\\\b\\\\s*(.*?)\\\\s*\\\\*\\\\/'),\r\n            end: new RegExp('^\\\\s*\\\\/\\\\*\\\\s*#endregion\\\\b.*\\\\*\\\\/')\r\n        }\r\n    }\r\n};\r\nexport var language = {\r\n    defaultToken: '',\r\n    tokenPostfix: '.scss',\r\n    ws: '[ \\t\\n\\r\\f]*',\r\n    identifier: '-?-?([a-zA-Z]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))([\\\\w\\\\-]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))*',\r\n    brackets: [\r\n        { open: '{', close: '}', token: 'delimiter.curly' },\r\n        { open: '[', close: ']', token: 'delimiter.bracket' },\r\n        { open: '(', close: ')', token: 'delimiter.parenthesis' },\r\n        { open: '<', close: '>', token: 'delimiter.angle' }\r\n    ],\r\n    tokenizer: {\r\n        root: [{ include: '@selector' }],\r\n        selector: [\r\n            { include: '@comments' },\r\n            { include: '@import' },\r\n            { include: '@variabledeclaration' },\r\n            { include: '@warndebug' },\r\n            ['[@](include)', { token: 'keyword', next: '@includedeclaration' }],\r\n            [\r\n                '[@](keyframes|-webkit-keyframes|-moz-keyframes|-o-keyframes)',\r\n                { token: 'keyword', next: '@keyframedeclaration' }\r\n            ],\r\n            ['[@](page|content|font-face|-moz-document)', { token: 'keyword' }],\r\n            ['[@](charset|namespace)', { token: 'keyword', next: '@declarationbody' }],\r\n            ['[@](function)', { token: 'keyword', next: '@functiondeclaration' }],\r\n            ['[@](mixin)', { token: 'keyword', next: '@mixindeclaration' }],\r\n            ['url(\\\\-prefix)?\\\\(', { token: 'meta', next: '@urldeclaration' }],\r\n            { include: '@controlstatement' },\r\n            { include: '@selectorname' },\r\n            ['[&\\\\*]', 'tag'],\r\n            ['[>\\\\+,]', 'delimiter'],\r\n            ['\\\\[', { token: 'delimiter.bracket', next: '@selectorattribute' }],\r\n            ['{', { token: 'delimiter.curly', next: '@selectorbody' }]\r\n        ],\r\n        selectorbody: [\r\n            ['[*_]?@identifier@ws:(?=(\\\\s|\\\\d|[^{;}]*[;}]))', 'attribute.name', '@rulevalue'],\r\n            { include: '@selector' },\r\n            ['[@](extend)', { token: 'keyword', next: '@extendbody' }],\r\n            ['[@](return)', { token: 'keyword', next: '@declarationbody' }],\r\n            ['}', { token: 'delimiter.curly', next: '@pop' }]\r\n        ],\r\n        selectorname: [\r\n            ['#{', { token: 'meta', next: '@variableinterpolation' }],\r\n            ['(\\\\.|#(?=[^{])|%|(@identifier)|:)+', 'tag'] // selector (.foo, div, ...)\r\n        ],\r\n        selectorattribute: [\r\n            { include: '@term' },\r\n            [']', { token: 'delimiter.bracket', next: '@pop' }]\r\n        ],\r\n        term: [\r\n            { include: '@comments' },\r\n            ['url(\\\\-prefix)?\\\\(', { token: 'meta', next: '@urldeclaration' }],\r\n            { include: '@functioninvocation' },\r\n            { include: '@numbers' },\r\n            { include: '@strings' },\r\n            { include: '@variablereference' },\r\n            ['(and\\\\b|or\\\\b|not\\\\b)', 'operator'],\r\n            { include: '@name' },\r\n            ['([<>=\\\\+\\\\-\\\\*\\\\/\\\\^\\\\|\\\\~,])', 'operator'],\r\n            [',', 'delimiter'],\r\n            ['!default', 'literal'],\r\n            ['\\\\(', { token: 'delimiter.parenthesis', next: '@parenthizedterm' }]\r\n        ],\r\n        rulevalue: [\r\n            { include: '@term' },\r\n            ['!important', 'literal'],\r\n            [';', 'delimiter', '@pop'],\r\n            ['{', { token: 'delimiter.curly', switchTo: '@nestedproperty' }],\r\n            ['(?=})', { token: '', next: '@pop' }] // missing semicolon\r\n        ],\r\n        nestedproperty: [\r\n            ['[*_]?@identifier@ws:', 'attribute.name', '@rulevalue'],\r\n            { include: '@comments' },\r\n            ['}', { token: 'delimiter.curly', next: '@pop' }]\r\n        ],\r\n        warndebug: [['[@](warn|debug)', { token: 'keyword', next: '@declarationbody' }]],\r\n        import: [['[@](import)', { token: 'keyword', next: '@declarationbody' }]],\r\n        variabledeclaration: [\r\n            // sass variables\r\n            ['\\\\$@identifier@ws:', 'variable.decl', '@declarationbody']\r\n        ],\r\n        urldeclaration: [\r\n            { include: '@strings' },\r\n            ['[^)\\r\\n]+', 'string'],\r\n            ['\\\\)', { token: 'meta', next: '@pop' }]\r\n        ],\r\n        parenthizedterm: [\r\n            { include: '@term' },\r\n            ['\\\\)', { token: 'delimiter.parenthesis', next: '@pop' }]\r\n        ],\r\n        declarationbody: [\r\n            { include: '@term' },\r\n            [';', 'delimiter', '@pop'],\r\n            ['(?=})', { token: '', next: '@pop' }] // missing semicolon\r\n        ],\r\n        extendbody: [\r\n            { include: '@selectorname' },\r\n            ['!optional', 'literal'],\r\n            [';', 'delimiter', '@pop'],\r\n            ['(?=})', { token: '', next: '@pop' }] // missing semicolon\r\n        ],\r\n        variablereference: [\r\n            // sass variable reference\r\n            ['\\\\$@identifier', 'variable.ref'],\r\n            ['\\\\.\\\\.\\\\.', 'operator'],\r\n            ['#{', { token: 'meta', next: '@variableinterpolation' }] // sass var resolve\r\n        ],\r\n        variableinterpolation: [\r\n            { include: '@variablereference' },\r\n            ['}', { token: 'meta', next: '@pop' }]\r\n        ],\r\n        comments: [\r\n            ['\\\\/\\\\*', 'comment', '@comment'],\r\n            ['\\\\/\\\\/+.*', 'comment']\r\n        ],\r\n        comment: [\r\n            ['\\\\*\\\\/', 'comment', '@pop'],\r\n            ['.', 'comment']\r\n        ],\r\n        name: [['@identifier', 'attribute.value']],\r\n        numbers: [\r\n            ['(\\\\d*\\\\.)?\\\\d+([eE][\\\\-+]?\\\\d+)?', { token: 'number', next: '@units' }],\r\n            ['#[0-9a-fA-F_]+(?!\\\\w)', 'number.hex']\r\n        ],\r\n        units: [\r\n            [\r\n                '(em|ex|ch|rem|vmin|vmax|vw|vh|vm|cm|mm|in|px|pt|pc|deg|grad|rad|turn|s|ms|Hz|kHz|%)?',\r\n                'number',\r\n                '@pop'\r\n            ]\r\n        ],\r\n        functiondeclaration: [\r\n            ['@identifier@ws\\\\(', { token: 'meta', next: '@parameterdeclaration' }],\r\n            ['{', { token: 'delimiter.curly', switchTo: '@functionbody' }]\r\n        ],\r\n        mixindeclaration: [\r\n            // mixin with parameters\r\n            ['@identifier@ws\\\\(', { token: 'meta', next: '@parameterdeclaration' }],\r\n            // mixin without parameters\r\n            ['@identifier', 'meta'],\r\n            ['{', { token: 'delimiter.curly', switchTo: '@selectorbody' }]\r\n        ],\r\n        parameterdeclaration: [\r\n            ['\\\\$@identifier@ws:', 'variable.decl'],\r\n            ['\\\\.\\\\.\\\\.', 'operator'],\r\n            [',', 'delimiter'],\r\n            { include: '@term' },\r\n            ['\\\\)', { token: 'meta', next: '@pop' }]\r\n        ],\r\n        includedeclaration: [\r\n            { include: '@functioninvocation' },\r\n            ['@identifier', 'meta'],\r\n            [';', 'delimiter', '@pop'],\r\n            ['(?=})', { token: '', next: '@pop' }],\r\n            ['{', { token: 'delimiter.curly', switchTo: '@selectorbody' }]\r\n        ],\r\n        keyframedeclaration: [\r\n            ['@identifier', 'meta'],\r\n            ['{', { token: 'delimiter.curly', switchTo: '@keyframebody' }]\r\n        ],\r\n        keyframebody: [\r\n            { include: '@term' },\r\n            ['{', { token: 'delimiter.curly', next: '@selectorbody' }],\r\n            ['}', { token: 'delimiter.curly', next: '@pop' }]\r\n        ],\r\n        controlstatement: [\r\n            [\r\n                '[@](if|else|for|while|each|media)',\r\n                { token: 'keyword.flow', next: '@controlstatementdeclaration' }\r\n            ]\r\n        ],\r\n        controlstatementdeclaration: [\r\n            ['(in|from|through|if|to)\\\\b', { token: 'keyword.flow' }],\r\n            { include: '@term' },\r\n            ['{', { token: 'delimiter.curly', switchTo: '@selectorbody' }]\r\n        ],\r\n        functionbody: [\r\n            ['[@](return)', { token: 'keyword' }],\r\n            { include: '@variabledeclaration' },\r\n            { include: '@term' },\r\n            { include: '@controlstatement' },\r\n            [';', 'delimiter'],\r\n            ['}', { token: 'delimiter.curly', next: '@pop' }]\r\n        ],\r\n        functioninvocation: [['@identifier\\\\(', { token: 'meta', next: '@functionarguments' }]],\r\n        functionarguments: [\r\n            ['\\\\$@identifier@ws:', 'attribute.name'],\r\n            ['[,]', 'delimiter'],\r\n            { include: '@term' },\r\n            ['\\\\)', { token: 'meta', next: '@pop' }]\r\n        ],\r\n        strings: [\r\n            ['~?\"', { token: 'string.delimiter', next: '@stringenddoublequote' }],\r\n            [\"~?'\", { token: 'string.delimiter', next: '@stringendquote' }]\r\n        ],\r\n        stringenddoublequote: [\r\n            ['\\\\\\\\.', 'string'],\r\n            ['\"', { token: 'string.delimiter', next: '@pop' }],\r\n            ['.', 'string']\r\n        ],\r\n        stringendquote: [\r\n            ['\\\\\\\\.', 'string'],\r\n            [\"'\", { token: 'string.delimiter', next: '@pop' }],\r\n            ['.', 'string']\r\n        ]\r\n    }\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/monaco-editor/esm/vs/basic-languages/scss/scss.js\n// module id = jkhk\n// module chunks = 20"],"sourceRoot":""}